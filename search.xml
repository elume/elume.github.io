<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[HTML5 中的可缩放矢量图形（SVG）]]></title>
    <url>%2F2020%2F04%2F11%2F0020_HTML5-SVG%2F</url>
    <content type="text"><![CDATA[HTML5 中的可缩放矢量图形（SVG） 链接：HTML5 中的可缩放矢量图形（SVG）]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Web颜色名列表]]></title>
    <url>%2F2020%2F02%2F13%2F0019_colornames%2F</url>
    <content type="text"><![CDATA[Web颜色名列表 th, td{ text-align: center; } span{ font-size: 1.4em; } 一、以颜色值排序 颜色 颜色名 十六进制颜色值 RGB颜色值 IndianRed #CD5C5C rgb(205, 92, 92) LightCoral #F08080 rgb(240, 128, 128) Salmon #FA8072 rgb(250, 128, 114) DarkSalmon #E9967A rgb(233, 150, 122) LightSalmon #FFA07A rgb(255, 160, 122) Crimson #DC143C rgb(220, 20, 60) Red #FF0000 rgb(255, 0, 0) FireBrick #B22222 rgb(178, 34, 34) DarkRed #8B0000 rgb(139, 0, 0) Pink #FFC0CB rgb(255, 192, 203) LightPink #FFB6C1 rgb(255, 182, 193) HotPink #FF69B4 rgb(255, 105, 180) DeepPink #FF1493 rgb(255, 20, 147) MediumVioletRed #C71585 rgb(199, 21, 133) PaleVioletRed #DB7093 rgb(219, 112, 147) LightSalmon #FFA07A rgb(255, 160, 122) Coral #FF7F50 rgb(255, 127, 80) Tomato #FF6347 rgb(255, 99, 71) OrangeRed #FF4500 rgb(255, 69, 0) DarkOrange #FF8C00 rgb(255, 140, 0) Orange #FFA500 rgb(255, 165, 0) Gold #FFD700 rgb(255, 215, 0) Yellow #FFFF00 rgb(255, 255, 0) LightYellow #FFFFE0 rgb(255, 255, 224) LemonChiffon #FFFACD rgb(255, 250, 205) LightGoldenrodYellow #FAFAD2 rgb(250, 250, 210) PapayaWhip #FFEFD5 rgb(255, 239, 213) Moccasin #FFE4B5 rgb(255, 228, 181) PeachPuff #FFDAB9 rgb(255, 218, 185) PaleGoldenrod #EEE8AA rgb(238, 232, 170) Khaki #F0E68C rgb(240, 230, 140) DarkKhaki #BDB76B rgb(189, 183, 107) Lavender #E6E6FA rgb(230, 230, 250) Thistle #D8BFD8 rgb(216, 191, 216) Plum #DDA0DD rgb(221, 160, 221) Violet #EE82EE rgb(238, 130, 238) Orchid #DA70D6 rgb(218, 112, 214) Fuchsia #FF00FF rgb(255, 0, 255) Magenta #FF00FF rgb(255, 0, 255) MediumOrchid #BA55D3 rgb(186, 85, 211) MediumPurple #9370DB rgb(147, 112, 219) RebeccaPurple #663399 rgb(102, 51, 153) BlueViolet #8A2BE2 rgb(138, 43, 226) DarkViolet #9400D3 rgb(148, 0, 211) DarkOrchid #9932CC rgb(153, 50, 204) DarkMagenta #8B008B rgb(139, 0, 139) Purple #800080 rgb(128, 0, 128) Indigo #4B0082 rgb(75, 0, 130) SlateBlue #6A5ACD rgb(106, 90, 205) DarkSlateBlue #483D8B rgb(72, 61, 139) MediumSlateBlue #7B68EE rgb(123, 104, 238) GreenYellow #ADFF2F rgb(173, 255, 47) Chartreuse #7FFF00 rgb(127, 255, 0) LawnGreen #7CFC00 rgb(124, 252, 0) Lime #00FF00 rgb(0, 255, 0) LimeGreen #32CD32 rgb(50, 205, 50) PaleGreen #98FB98 rgb(152, 251, 152) LightGreen #90EE90 rgb(144, 238, 144) MediumSpringGreen #00FA9A rgb(0, 250, 154) SpringGreen #00FF7F rgb(0, 255, 127) MediumSeaGreen #3CB371 rgb(60, 179, 113) SeaGreen #2E8B57 rgb(46, 139, 87) ForestGreen #228B22 rgb(34, 139, 34) Green #008000 rgb(0, 128, 0) DarkGreen #006400 rgb(0, 100, 0) YellowGreen #9ACD32 rgb(154, 205, 50) OliveDrab #6B8E23 rgb(107, 142, 35) Olive #808000 rgb(128, 128, 0) DarkOliveGreen #556B2F rgb(85, 107, 47) MediumAquamarine #66CDAA rgb(102, 205, 170) DarkSeaGreen #8FBC8B rgb(143, 188, 139) LightSeaGreen #20B2AA rgb(32, 178, 170) DarkCyan #008B8B rgb(0, 139, 139) Teal #008080 rgb(0, 128, 128) Aqua #00FFFF rgb(0, 255, 255) Cyan #00FFFF rgb(0, 255, 255) LightCyan #E0FFFF rgb(224, 255, 255) PaleTurquoise #AFEEEE rgb(175, 238, 238) Aquamarine #7FFFD4 rgb(127, 255, 212) Turquoise #40E0D0 rgb(64, 224, 208) MediumTurquoise #48D1CC rgb(72, 209, 204) DarkTurquoise #00CED1 rgb(0, 206, 209) CadetBlue #5F9EA0 rgb(95, 158, 160) SteelBlue #4682B4 rgb(70, 130, 180) LightSteelBlue #B0C4DE rgb(176, 196, 222) PowderBlue #B0E0E6 rgb(176, 224, 230) LightBlue #ADD8E6 rgb(173, 216, 230) SkyBlue #87CEEB rgb(135, 206, 235) LightSkyBlue #87CEFA rgb(135, 206, 250) DeepSkyBlue #00BFFF rgb(0, 191, 255) DodgerBlue #1E90FF rgb(30, 144, 255) CornflowerBlue #6495ED rgb(100, 149, 237) MediumSlateBlue #7B68EE rgb(123, 104, 238) RoyalBlue #4169E1 rgb(65, 105, 225) Blue #0000FF rgb(0, 0, 255) MediumBlue #0000CD rgb(0, 0, 205) DarkBlue #00008B rgb(0, 0, 139) Navy #000080 rgb(0, 0, 128) MidnightBlue #191970 rgb(25, 25, 112) Cornsilk #FFF8DC rgb(255, 248, 220) BlanchedAlmond #FFEBCD rgb(255, 235, 205) Bisque #FFE4C4 rgb(255, 228, 196) NavajoWhite #FFDEAD rgb(255, 222, 173) Wheat #F5DEB3 rgb(245, 222, 179) BurlyWood #DEB887 rgb(222, 184, 135) Tan #D2B48C rgb(210, 180, 140) RosyBrown #BC8F8F rgb(188, 143, 143) SandyBrown #F4A460 rgb(244, 164, 96) Goldenrod #DAA520 rgb(218, 165, 32) DarkGoldenrod #B8860B rgb(184, 134, 11) Peru #CD853F rgb(205, 133, 63) Chocolate #D2691E rgb(210, 105, 30) SaddleBrown #8B4513 rgb(139, 69, 19) Sienna #A0522D rgb(160, 82, 45) Brown #A52A2A rgb(165, 42, 42) Maroon #800000 rgb(128, 0, 0) White #FFFFFF rgb(255, 255, 255) Snow #FFFAFA rgb(255, 250, 250) HoneyDew #F0FFF0 rgb(240, 255, 240) MintCream #F5FFFA rgb(245, 255, 250) Azure #F0FFFF rgb(240, 255, 255) AliceBlue #F0F8FF rgb(240, 248, 255) GhostWhite #F8F8FF rgb(248, 248, 255) WhiteSmoke #F5F5F5 rgb(245, 245, 245) SeaShell #FFF5EE rgb(255, 245, 238) Beige #F5F5DC rgb(245, 245, 220) OldLace #FDF5E6 rgb(253, 245, 230) FloralWhite #FFFAF0 rgb(255, 250, 240) Ivory #FFFFF0 rgb(255, 255, 240) AntiqueWhite #FAEBD7 rgb(250, 235, 215) Linen #FAF0E6 rgb(250, 240, 230) LavenderBlush #FFF0F5 rgb(255, 240, 245) MistyRose #FFE4E1 rgb(255, 228, 225) Gainsboro #DCDCDC rgb(220, 220, 220) LightGray #D3D3D3 rgb(211, 211, 211) Silver #C0C0C0 rgb(192, 192, 192) DarkGray #A9A9A9 rgb(169, 169, 169) Gray #808080 rgb(128, 128, 128) DimGray #696969 rgb(105, 105, 105) LightSlateGray #778899 rgb(119, 136, 153) SlateGray #708090 rgb(112, 128, 144) DarkSlateGray #2F4F4F rgb(47, 79, 79) Black #000000 rgb(0, 0, 0) 二、以颜色名排序 根据十六进制值排序的相同列表 颜色名 十六进制颜色值 颜色 AliceBlue #F0F8FF &nbsp; AntiqueWhite #FAEBD7 &nbsp; Aqua #00FFFF &nbsp; Aquamarine #7FFFD4 &nbsp; Azure #F0FFFF &nbsp; Beige #F5F5DC &nbsp; Bisque #FFE4C4 &nbsp; Black #000000 &nbsp; BlanchedAlmond #FFEBCD &nbsp; Blue #0000FF &nbsp; BlueViolet #8A2BE2 &nbsp; Brown #A52A2A &nbsp; BurlyWood #DEB887 &nbsp; CadetBlue #5F9EA0 &nbsp; Chartreuse #7FFF00 &nbsp; Chocolate #D2691E &nbsp; Coral #FF7F50 &nbsp; CornflowerBlue #6495ED &nbsp; Cornsilk #FFF8DC &nbsp; Crimson #DC143C &nbsp; Cyan #00FFFF &nbsp; DarkBlue #00008B &nbsp; DarkCyan #008B8B &nbsp; DarkGoldenRod #B8860B &nbsp; DarkGray #A9A9A9 &nbsp; DarkGreen #006400 &nbsp; DarkKhaki #BDB76B &nbsp; DarkMagenta #8B008B &nbsp; DarkOliveGreen #556B2F &nbsp; Darkorange #FF8C00 &nbsp; DarkOrchid #9932CC &nbsp; DarkRed #8B0000 &nbsp; DarkSalmon #E9967A &nbsp; DarkSeaGreen #8FBC8F &nbsp; DarkSlateBlue #483D8B &nbsp; DarkSlateGray #2F4F4F &nbsp; DarkTurquoise #00CED1 &nbsp; DarkViolet #9400D3 &nbsp; DeepPink #FF1493 &nbsp; DeepSkyBlue #00BFFF &nbsp; DimGray #696969 &nbsp; DodgerBlue #1E90FF &nbsp; Feldspar #D19275 &nbsp; FireBrick #B22222 &nbsp; FloralWhite #FFFAF0 &nbsp; ForestGreen #228B22 &nbsp; Fuchsia #FF00FF &nbsp; Gainsboro #DCDCDC &nbsp; GhostWhite #F8F8FF &nbsp; Gold #FFD700 &nbsp; GoldenRod #DAA520 &nbsp; Gray #808080 &nbsp; Green #008000 &nbsp; GreenYellow #ADFF2F &nbsp; HoneyDew #F0FFF0 &nbsp; HotPink #FF69B4 &nbsp; IndianRed #CD5C5C &nbsp; Indigo #4B0082 &nbsp; Ivory #FFFFF0 &nbsp; Khaki #F0E68C &nbsp; Lavender #E6E6FA &nbsp; LavenderBlush #FFF0F5 &nbsp; LawnGreen #7CFC00 &nbsp; LemonChiffon #FFFACD &nbsp; LightBlue #ADD8E6 &nbsp; LightCoral #F08080 &nbsp; LightCyan #E0FFFF &nbsp; LightGoldenRodYellow #FAFAD2 &nbsp; LightGrey #D3D3D3 &nbsp; LightGreen #90EE90 &nbsp; LightPink #FFB6C1 &nbsp; LightSalmon #FFA07A &nbsp; LightSeaGreen #20B2AA &nbsp; LightSkyBlue #87CEFA &nbsp; LightSlateBlue #8470FF &nbsp; LightSlateGray #778899 &nbsp; LightSteelBlue #B0C4DE &nbsp; LightYellow #FFFFE0 &nbsp; Lime #00FF00 &nbsp; LimeGreen #32CD32 &nbsp; Linen #FAF0E6 &nbsp; Magenta #FF00FF &nbsp; Maroon #800000 &nbsp; MediumAquaMarine #66CDAA &nbsp; MediumBlue #0000CD &nbsp; MediumOrchid #BA55D3 &nbsp; MediumPurple #9370D8 &nbsp; MediumSeaGreen #3CB371 &nbsp; MediumSlateBlue #7B68EE &nbsp; MediumSpringGreen #00FA9A &nbsp; MediumTurquoise #48D1CC &nbsp; MediumVioletRed #C71585 &nbsp; MidnightBlue #191970 &nbsp; MintCream #F5FFFA &nbsp; MistyRose #FFE4E1 &nbsp; Moccasin #FFE4B5 &nbsp; NavajoWhite #FFDEAD &nbsp; Navy #000080 &nbsp; OldLace #FDF5E6 &nbsp; Olive #808000 &nbsp; OliveDrab #6B8E23 &nbsp; Orange #FFA500 &nbsp; OrangeRed #FF4500 &nbsp; Orchid #DA70D6 &nbsp; PaleGoldenRod #EEE8AA &nbsp; PaleGreen #98FB98 &nbsp; PaleTurquoise #AFEEEE &nbsp; PaleVioletRed #D87093 &nbsp; PapayaWhip #FFEFD5 &nbsp; PeachPuff #FFDAB9 &nbsp; Peru #CD853F &nbsp; Pink #FFC0CB &nbsp; Plum #DDA0DD &nbsp; PowderBlue #B0E0E6 &nbsp; Purple #800080 &nbsp; Red #FF0000 &nbsp; RosyBrown #BC8F8F &nbsp; RoyalBlue #4169E1 &nbsp; SaddleBrown #8B4513 &nbsp; Salmon #FA8072 &nbsp; SandyBrown #F4A460 &nbsp; SeaGreen #2E8B57 &nbsp; SeaShell #FFF5EE &nbsp; Sienna #A0522D &nbsp; Silver #C0C0C0 &nbsp; SkyBlue #87CEEB &nbsp; SlateBlue #6A5ACD &nbsp; SlateGray #708090 &nbsp; Snow #FFFAFA &nbsp; SpringGreen #00FF7F &nbsp; SteelBlue #4682B4 &nbsp; Tan #D2B48C &nbsp; Teal #008080 &nbsp; Thistle #D8BFD8 &nbsp; Tomato #FF6347 &nbsp; Turquoise #40E0D0 &nbsp; Violet #EE82EE &nbsp; VioletRed #D02090 &nbsp; Wheat #F5DEB3 &nbsp; White #FFFFFF &nbsp; WhiteSmoke #F5F5F5 &nbsp; Yellow #FFFF00 &nbsp; YellowGreen #9ACD32 &nbsp;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[英文时态之——I eat breakfast]]></title>
    <url>%2F2020%2F02%2F12%2F0018_englishgtime%2F</url>
    <content type="text"><![CDATA[英文时态之——I eat breakfast]]></content>
      <categories>
        <category>语言</category>
      </categories>
      <tags>
        <tag>英语</tag>
        <tag>语法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JS控制字体大小，刷新不变]]></title>
    <url>%2F2020%2F01%2F28%2F0017_jscfontsize%2F</url>
    <content type="text"><![CDATA[JS控制字体大小，刷新不变 效果： 链接：https://codepen.io/nigatoo/pen/jOEeNWr HTML:12345678910111213&lt;br&gt;&lt;div class=&quot;font-resizer&quot;&gt;&lt;div class=&quot;font-sizer-buttons&quot;&gt; &lt;a href=&quot;#&quot; id=&quot;plustext&quot; class=&quot;button&quot; title=&quot;Increase Font Size&quot;&gt;&lt;span&gt;放大+&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;#&quot; id=&quot;minustext&quot; class=&quot;button&quot; title=&quot;Decrease Font Size&quot;&gt;&lt;span&gt;缩小-&lt;/span&gt;&lt;/a&gt;&lt;/div&gt; &lt;/div&gt; &lt;div id=&quot;text&quot;&gt; &lt;p&gt;Font Size&lt;/p&gt;&lt;/div&gt; CSS:123456789101112.button&#123; margin-left:10px; background-color: #4CAF50; /* Green */ border: none; color: white; padding: 15px 32px; text-align: center; text-decoration: none; display: inline-block; font-size: 16px; border-radius: 5px;&#125; JS:1234567891011121314function resizeText(multiplier) &#123; var elem = document.getElementById(&quot;text&quot;); var currentSize = elem.style.fontSize || 1; elem.style.fontSize = ( parseFloat(currentSize) + (multiplier * 0.2)) + &quot;em&quot;; localStorage.setItem(&apos;currentSize&apos;,currentSize);&#125;document.getElementById(&quot;plustext&quot;).addEventListener(&quot;click&quot;, function() &#123;resizeText(1);&#125;);document.getElementById(&quot;minustext&quot;).addEventListener(&quot;click&quot;, function() &#123;resizeText(-1);&#125;);window.onload = function()&#123; var g = localStorage.getItem(&apos;currentSize&apos;); document.getElementById(&quot;text&quot;).style.fontSize = g;&#125;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML调用Google Font方法]]></title>
    <url>%2F2020%2F01%2F28%2F0016_googlefontapi%2F</url>
    <content type="text"><![CDATA[HTML调用Google Font方法 打开 https://fonts.google.com/ 找到需要的字体，点击打开 在该字体页面，点击 SELECT THIS FONT 然后在 Family Selected 弹窗里面找到 EMBED 选项卡 复制 Embed Font 里的代码到 HTML（link 和 @import两种形式） 然后在 Specify in CSS 里复制代码到CSS样式。]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github + jsDelivr 免费CDN托管js和css文件]]></title>
    <url>%2F2020%2F01%2F28%2F0015_githubjsdelivrfreecdn%2F</url>
    <content type="text"><![CDATA[Github + jsDelivr 免费CDN托管js和css文件 一、 Github 操作： 创建新仓库：“cdn”，勾选自动创建readme.md文件选项。 复制仓库地址 二、 本地操作： 创建本地文件夹，用来管理仓库 进入文件夹，克隆仓库到本地，Git Bash Here： 1git clone 粘贴Github仓库地址 进入cdn文件夹，分别创建文件夹css和js。 把自己的css和js文件分别放入对应文件夹。 Push文件到GitHub仓库，Git Bash Here： 1234git statusgit add .git commit -m &apos;first time&apos;git push 三、 GitHub 操作（若无需版本控制，此步骤可以省略）： 发布第一版 release：v1.0 然后用 jsDelivr 规则引用即可使用 四、 jsDelivr 路径解释：https://cdn.jsdelivr.net/gh/用户名/仓库名@版本号/文件路径 例如：https://cdn.jsdelivr.net/gh/mygithubusername/cdn@v1.0/css/style.css 用法：&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/gh/mygithubusername/cdn@v1.0/css/style.css&quot;&gt; 若无版本号，‘@v1.0’ 删除 附：jsDelivr 规则：123456789101112131415161718192021222324252627282930313233343536// load any GitHub release, commit, or branch// note: we recommend using npm for projects that support ithttps://cdn.jsdelivr.net/gh/user/repo@version/file// load jQuery v3.2.1https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js// use a version range instead of a specific versionhttps://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.jshttps://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js// omit the version completely to get the latest one// you should NOT use this in productionhttps://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js// add &quot;.min&quot; to any JS/CSS file to get a minified version// if one doesn&apos;t exist, we&apos;ll generate it for youhttps://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js// add / at the end to get a directory listinghttps://cdn.jsdelivr.net/gh/jquery/jquery/]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[改进网站站内搜索-百度,Google自定义搜索和Elasticsearch自建搜索]]></title>
    <url>%2F2020%2F01%2F22%2F0014_search%2F</url>
    <content type="text"><![CDATA[改进网站站内搜索-百度,Google自定义搜索和Elasticsearch自建搜索 文章目录一、百度站内搜索引擎1.1 百度站内搜索引擎使用1.2 百度站内搜索引擎不支持Https二、Google自定义搜索2.1 Google自定义搜索使用2.2 Google自定义搜索不显示问题三、Elasticsearch自建搜索3.1 安装Elasticsearch3.2 安装 IK Analysis3.3 配置同义词3.4 Elasticsearch整合Wordpress四、总结 WordPress自带的搜索虽然说可以搜出一些东西出来，但是有时搜索的结果不一定满意，而且没有联词搜索和模糊搜索，导致有时候必须指定准确的关键字才能搜索出结果来。况且Wordpress自带的搜索对MysqL数据库查询依赖大，数据库大的话比较消耗时间。 替换Wordpress默认的搜索也不是什么难事，懂行的人基本上都知道site:wzfou.com xxx就可以搜索出指定网站的站内内容，而百度、Google都推出了自定义搜索，就是把site:wzfou.com xxx直接嵌入到站内，用户点击搜索后不用跳转到百度\Google就可以看到结果。 不过百度,Google自定义搜索依赖于搜索引擎的索引，这对于索引少或者是新站来说，有时新的文章搜索不出来，影响了用户体验。于是，Elasticsearch这种开源免费的自建搜索引擎诞生了，这是一个分布式、可扩展、实时的搜索与数据分析引擎，可以处理全文搜索和结构化数据的实时统计。 本篇文章就来分享一下百度,Google自定义搜索和Elasticsearch自建搜索整合Wordpress的方法，更多的关于WordPress建站及WP优化的文章还有： Linux的php-fpm优化心得-php-fpm进程占用内存大和不释放内存问题 WordPress添加支付宝,微信打赏按钮制作实例和Paypal.me打赏链接 五款优秀的RSS阅读器推荐-附国内外各大RSS阅读器收集整理汇总 PS：2019年9月1日更新，不想折腾百度和谷歌自定义搜索的朋友，可以试试这个优秀的第三方站内搜索引擎：用Algolia给WordPress添加实时站内搜索功能-搜索质量更高内容更准。 PS：2019年12月2日更新，想要构建更为强大的更为快速的免费站内搜索，你还可以试试 RediSearch高性能全文搜索引擎：RediSearch高性能全文搜索引擎-整合WordPress打造高质量搜索。 一、百度站内搜索引擎 网站： https://ziyuan.baidu.com/cse/wiki/introduce 1.1 百度站内搜索引擎使用 首先是到百度站内搜索引擎添加想要使用的网站域名。 然后是选择百度站内搜索引擎样式，有嵌入式、悬浮式、侧边式以及与原站的搜索框整合型，请根据你自己的需要来选择。（点击放大） 百度自定义搜索引擎还有一些高级可供我们优化站内搜索结果，例如可以设置关键词，搜索提示以及内文提词等等。 百度站内搜索引擎还允许你自定义二级域名，同时还可以添加Logo等信息。 1.2 百度站内搜索引擎不支持Https 非常可惜，百度站内搜索引擎至今不支持Https。虽然说百度搜索宣称Https有利于安全，但是自己的产品也不怎么热心于Https，而且看一下百度站内搜索引擎的官网，基本上有快两年没有更新了，大家要做好百度关闭该产品的准备。 如果是Https站点的话，要么使用Nginx的反代（见：Nginx反向绑定），要么就不要使用嵌入式，改用托管式的，即点击搜索按钮后跳转到百度自定义搜索网站。代码改进如下（请将s=xxx换成你自己的）： &lt;input type="text" name="q" id="bdcsMain" value="搜索全站内容" onfocus="if (value =='搜索全站内容'){value =''}" onblur="if (value ==''){value='搜索全站内容'}" &gt; &lt;button class="search-submit" id="btnPost" type="submit" onclick="window.open('http://zhannei.baidu.com/cse/search?s=14135322191061470907&amp;entry=1&amp;q='+document.getElementById('bdcsMain').value)"&gt;搜索&lt;/button&gt; 嵌入效果如下： 搜索 二、Google自定义搜索 网站： https://cse.google.com/ 2.1 Google自定义搜索使用 首先登录到Google自定义搜索官网页面，然后点击新建一个自定义搜索。 接着就是设置你要索引的网址，命名一个名称等。（点击放大） 创建完成后，你就可以点击获取代码了。 Google站内搜索同样提供了外观设置、搜索结果优化等功能，你可以根据自己的需要来调整。（点击放大） Google自定义搜索允许你置顶某一个搜索结果、自动填充、同义词等等。 这是Google自定义搜索搜索效果，嵌入到网页可能还会受到原CSS的影响，需要自己再一步微调。（点击放大） Google自定义搜索还可以搜索图片，实在很强大。 2.2 Google自定义搜索不显示问题 由于众所周知的原因，Google自定义搜索在国内是无法正常显示，那么如何解决此问题呢？一个可行的方法就是用反代（见：Nginx反向绑定），或者将Google自定义搜索相关文件本地化。实现难度比较大…… Google自定义搜索其实也是可以托管的，效果如下： https://cse.google.com/cse/publicurl?cx=011545314673148308753:3gbnph6-kfc 三、Elasticsearch自建搜索 网站： https://www.elastic.co 3.1 安装Elasticsearch Elasticsearch安装基本上可以参考官方的教程了，这里直接引用imququ.com的安装方法： 虚拟机和线上环境都是 Ubuntu 14.04.4 LTS，Elasticsearch 用的是最新版。一切开始之前，先要检查机器上是否装有 java 环境，如果没有可以通过以下命令安装： sudo apt-get install openjdk-7-jre-headless 下载 Elasticsearch 2.3.0 压缩包并解压： wget -c https://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/zip/elasticsearch/2.3.0/elasticsearch-2.3.0.zip unzip elasticsearch-2.3.0.zip 将解压得到的 elasticsearch-2.3.0 目录重命名为 ~/es_root（名称及位置没有限制，可以将它挪到你认为合适的任何位置）。Elasticsearch 无需安装，直接可以运行（注意：不能用 root 帐号运行）： BASHcd ~/es_root/bin/ chmod a+x elasticsearch ./elasticsearch 如果屏幕上没有打印错误信息，说明 Elasticsearch 服务已经成功启动。新建一个终端，用 curl 验证下： BASHcurl -XGET http://127.0.0.1:9200/?pretty { “name” : “Melissa Gold”, “cluster_name” : “elasticsearch”, “version” : { “number” : “2.3.0”, “build_hash” : “8371be8d5fe5df7fb9c0516c474d77b9feddd888”, “build_timestamp” : “2016-03-29T07:54:48Z”, “build_snapshot” : false, “lucene_version” : “5.5.0” }, “tagline” : “You Know, for Search”} 如果看到以上信息，说明一切正常，否则请根据屏幕上的错误信息查找原因。尽管 Elasticsearch 本身是用 java 写的，但它对外可以通过 RESTful 接口交互，十分方便。 默认情况下 Elasticsearch 的 RESTful 服务只有本机才能访问，也就是说无法从主机访问虚拟机中的服务。为了方便调试，可以修改 ~/es_root/config/elasticsearch.yml 文件，加入以下两行： network.bind_host: "0.0.0.0" network.publish_host: _non_loopback:ipv4_ 但线上环境千万不要这样配置，否则任何人都可以通过这个接口修改你的数据。 3.2 安装 IK Analysis Elasticsearch搜索自带的分词器会粗暴地把每个汉字直接分开，没有根据词库来分词。为了处理中文搜索，还需要安装中文分词插件。我使用的是 elasticsearch-analysis-ik，支持自定义词库。 首先，下载与 Elasticsearch 匹配的 elasticsearch-analysis-ik 插件： wget -c https://github.com/medcl/elasticsearch-analysis-ik/archive/v1.9.0.zip unzip v1.9.0.zip 解压后，进入插件源码目录编译： BASHsudo apt-get install maven cd elasticsearch-analysis-ik-1.9.0 mvn package 如果一切顺利，在 target/releases/ 目录下可以找到编好的文件。将其解压并拷到 ~/es_root 对应目录： mkdir -p ~/es_root/plugins/ik/ unzip target/releases/elasticsearch-analysis-ik-1.9.0.zip -d ~/es_root/plugins/ik/ elasticsearch-analysis-ik 的配置文件在 ~/es_root/plugins/ik/config/ik/ 目录，很多都是词表，直接用文本编辑器打开就可以修改，改完记得保存为 utf-8 格式。 现在再启动 Elasticsearch 服务，如果看到类似下面这样的信息，说明 IK Analysis 插件已经装好了： plugins [analysis-ik] 3.3 配置同义词 Elasticsearch 自带一个名为 synonym 的同义词 filter。为了能让 IK 和 synonym 同时工作，我们需要定义新的 analyzer，用 IK 做 tokenizer，synonym 做 filter。听上去很复杂，实际上要做的只是加一段配置。 打开 ~/es_root/config/elasticsearch.yml 文件，加入以下配置： YAMLindex: analysis: analyzer: ik_syno: type: custom tokenizer: ik_max_word filter: [my_synonym_filter] ik_syno_smart: type: custom tokenizer: ik_smart filter: [my_synonym_filter] filter: my_synonym_filter: type: synonym synonyms_path: analysis/synonym.txt 以上配置定义了 ik_syno 和 ik_syno_smart 这两个新的 analyzer，分别对应 IK 的 ik_max_word 和 ik_smart 两种分词策略。根据 IK 的文档，二者区别如下： ik_max_word：会将文本做最细粒度的拆分，会穷尽各种可能的组合； ik_smart：会将文本做最粗粒度的拆分； ik_syno 和 ik_syno_smart 都会使用 synonym filter 实现同义词转换。为了方便后续测试，建议创建 ~/es_root/config/analysis/synonym.txt 文件，输入一些同义词并存为 utf-8 格式。例如： ua,user-agent,userAgent js,javascript 谷歌=&gt;google 3.4 Elasticsearch整合Wordpress WordPress插件： 1、ElasticPress：https://wordpress.org/plugins/elasticpress/ 2、WP Search with Elasticsearch：https://wordpress.org/plugins/db-search-with-elasticsearch/ 这两款Elasticsearch WordPress 插件，都是可以帮助我们将Elasticsearch搜索整合到Wordpress，首先是激活插件，然后到插件设置页面填写Elasticsearch服务器相关的信息。（点击放大） 然后就可以将Wordpress的文章以及页面同步到Elasticsearch服务器并开始索引了。 四、总结 百度站内搜索引擎适合用在没有使用Https以及百度索引量大的网站，对于新站以及用上了Https的网站使用百度站内搜索引擎非常不利，而Google自定义搜索适合国外的朋友使用，国内的朋友不要折腾了。 Elasticsearch自建搜索是一个非常不错的工具，功能强大，用于Wordpress的全文搜索真的是“牛刀小试”了，Elasticsearch可以对文档进行索引、搜索、排序、过滤，它能够执行复杂的全文搜索。 本文全文引自： 挖站否： https://wzfou.com/baidu-google-es/ 版权信息请查看 挖站否 站内公告]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript收藏]]></title>
    <url>%2F2020%2F01%2F15%2F0013_jschangefontsize%2F</url>
    <content type="text"><![CDATA[JavaScript收藏 JS控制字体大小12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;字体大小控制&lt;/title&gt; &lt;style&gt; .button &#123; background-color: #4CAF50; border: none; color: white; padding: 15px 32px; text-align: center; font-size: 1.4em; margin: 4px 2px; border-radius: 8px; &#125; .button1 &#123; background-color: #00bace; border: none; color: white; padding: 15px 32px; text-align: center; font-size: 1em; margin: 4px 2px; border-radius: 8px; &#125; h2 &#123; text-align: center; padding-top: 2em; &#125; &lt;/style&gt; &lt;script&gt; function ChangefontSize(z) &#123; var x = document.getElementById(&quot;demo&quot;); var y = window .getComputedStyle(x) .fontSize; var fn = y[0]; var sn = y[1]; var fsn = fn + sn; fsn = Number(fsn); if (z == 1) &#123; fsn = fsn - 3; &#125; else &#123; fsn = fsn + 3; &#125; fsn = String(fsn) + &apos;px&apos;; x.style.fontSize = fsn; &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;JS控制字体大小和页面跳转演示&lt;/h2&gt; &lt;button class=&quot;button&quot; onclick=&quot;ChangefontSize(0)&quot;&gt;A+&lt;/button&gt; &lt;button class=&quot;button&quot; onclick=&quot;ChangefontSize(1)&quot;&gt;A-&lt;/button&gt; &lt;div id=&quot;demo&quot;&gt; &lt;p&gt; 第一段： JS控制字体大小和页面跳转演示 &lt;/p&gt; &lt;p&gt; 第二段： JS控制字体大小和页面跳转演示 &lt;/p&gt; &lt;/div&gt; &lt;hr&gt; &lt;button class=&quot;button1&quot; onclick=&quot;javascript:window.location.href=&apos;https://google.com&apos;&quot;&gt;跳转谷歌&lt;/button&gt; &lt;button class=&quot;button1&quot; onclick=&quot;javascript:window.location.href=&apos;https://baidu.com&apos;&quot;&gt;跳转百度&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 字体大小控制 .button { background-color: #4CAF50; border: none; color: white; padding: 15px 32px; text-align: center; font-size: 1.4em; margin: 4px 2px; border-radius: 8px; } .button1 { background-color: #00bace; border: none; color: white; padding: 15px 32px; text-align: center; font-size: 1em; margin: 4px 2px; border-radius: 8px; } h2 { text-align: center; padding-top: 2em; } function ChangefontSize(z) { var x = document.getElementById("demo"); var y = window .getComputedStyle(x) .fontSize; var fn = y[0]; var sn = y[1]; var fsn = fn + sn; fsn = Number(fsn); if (z == 1) { fsn = fsn - 3; } else { fsn = fsn + 3; } fsn = String(fsn) + 'px'; x.style.fontSize = fsn; } JS控制字体大小和页面跳转演示 A+ A- 第一段： JS控制字体大小和页面跳转演示 第二段： JS控制字体大小和页面跳转演示 跳转谷歌 跳转百度 JS查找替换：1234567891011121314151617&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;Try&lt;/title&gt; &lt;script type=&quot;text/javascript&quot;&gt; function load_home() &#123; var text = document.getElementById(&quot;note&quot;); str = text.innerText.replace(/Hello World!/g, &quot;你好世界！&quot;); text.innerText = &quot;Hello World! 已替换为：&quot; + str; &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;button type=&quot;button&quot; id=&quot;btn&quot; onclick=&quot;javascript:load_home();&quot;&gt;确认&lt;/button&gt; &lt;p id=&quot;note&quot;&gt;Hello World!&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; Try function load_home() { var text = document.getElementById("note"); str = text.innerText.replace(/Hello World!/g, "你好世界！"); text.innerText = "Hello World! 已替换为：" + str; } .button { background-color: #4CAF50; border: none; color: white; padding: 15px 32px; text-align: center; font-size: 1.4em; margin: 4px 2px; border-radius: 8px; } 替换 Hello World! 为：你好世界！ 替换 Hello World! 计数器：123456789101112131415161718&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;Try&lt;/title&gt; &lt;script type=&quot;text/javascript&quot;&gt; function load_home() &#123; var str = document.getElementById(&quot;note&quot;); var num = str.innerText; num++; str.innerText = num; &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;button type=&quot;button&quot; id=&quot;btn&quot; onclick=&quot;load_home();&quot;&gt;确认&lt;/button&gt; &lt;p&gt;已点击了：&lt;span id=&quot;note&quot;&gt;0&lt;/span&gt;次&lt;/p&gt; &lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Autohotkey]]></title>
    <url>%2F2019%2F12%2F24%2F0012_autohotkey%2F</url>
    <content type="text"><![CDATA[Autohotkey 挂起/启动 所有命令123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Ctrl + Alt + 0 暂停所有脚本^!0:: Suspend; ++++++++++++++++++++++判断word是否在运行，true：激活窗口，false：打开word+Right:: ; 打开IfWinExist ahk_exe WINWORD.EXE WinActivateelse run &quot;C:\Program Files\Microsoft Office\root\Office16\WINWORD.EXE&quot;return; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++打开文档+z:: ; 打开Run, D:\桌面\制作\0000.pdfReturn; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++替换双空格为全角空格:*: :: ; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++双击Esc打开Word文档; 判断400毫秒内某按键是否被双击，如果被双击执行指定动作~Esc:: if (A_PriorHotkey &lt;&gt; &quot;~Esc&quot; or A_TimeSincePriorHotkey &gt; 400) &#123; ; Too much time between presses, so this isn&apos;t a double-press. KeyWait, Esc return &#125; Run, D:\桌面\制作\0000.docxreturn; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++各种粘贴功能1::Send, &#123;Ctrl down&#125;&#123;c&#125;&#123;Ctrl up&#125;IfWinExist ahk_exe WINWORD.EXE WinActivateSend, &#123;Shift down&#125; &#123;9&#125;&#123;0&#125; &#123;Shift up&#125;&#123;Left&#125;&#123;Ctrl down&#125;&#123;v&#125;&#123;Ctrl up&#125;IfWinExist ahk_exe hh.exe WinActivateReturn2::Send, &#123;Ctrl down&#125;&#123;c&#125;&#123;Ctrl up&#125;IfWinExist ahk_exe WINWORD.EXE WinActivateSend, &#123;,&#125;&#123;Ctrl down&#125;&#123;v&#125;&#123;Ctrl up&#125;Return3::Send, &#123;Ctrl down&#125;&#123;c&#125;&#123;Ctrl up&#125;IfWinExist ahk_exe WINWORD.EXE WinActivateSend, &#123;Left&#125;&#123;Ctrl down&#125;&#123;v&#125;&#123;Ctrl up&#125;Return4::Send, &#123;Ctrl down&#125;&#123;c&#125;&#123;Ctrl up&#125;IfWinExist ahk_exe WINWORD.EXE WinActivateSend, ^+vReturn]]></content>
      <categories>
        <category>应用软件</category>
      </categories>
      <tags>
        <tag>Autohotkey</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端需要的技术概览]]></title>
    <url>%2F2019%2F12%2F21%2F0011_frontend%2F</url>
    <content type="text"><![CDATA[前端需要的技术概览]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[全文搜索知识收藏]]></title>
    <url>%2F2019%2F12%2F15%2F0010_fulltextsearch%2F</url>
    <content type="text"><![CDATA[全文搜索知识收藏 Algolia Search: 用 Algolia DocSearch 轻松实现文档全站搜索]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>搜索技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS]]></title>
    <url>%2F2019%2F12%2F07%2F0009_css%2F</url>
    <content type="text"><![CDATA[CSS 知识 一、 收藏1、 div标签a、 一个好看的阴影：123456div&#123; background-color: #fff; box-shadow: 0 1px 5px -2px #000; width: 500px; height: 306px; margin: auto;&#125;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端学习]]></title>
    <url>%2F2019%2F11%2F29%2F0008_qianduan%2F</url>
    <content type="text"><![CDATA[前端学习之路 一、 基础知识： 计算机核心理论： 数据结构/算法初步 计算机网络基础 数据库初步 前端三大件： HTML(5) CSS(3) JavaScript(ES6) 前端类库，工具等： jQuery Node（技术栈 + 工具栈） Sass/Less Bootstrap 现代框架： Angular React Vue 周边开发： Chrome Extension Electron/微信小程序 二、 书单： 计算机原理： 《编码》 《HTTP权威指南》 HTML &amp; CSS： 《Head First HTML &amp; CSS》 《CSS权威指南》 《The Book Of CSS3》 JS： 《Eloquent JavaScript》 《JS权威指南》 《JS Good Parts》 《High Performance JavaScript》 《Speaking JS》]]></content>
      <categories>
        <category>网站技术</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo d一台电脑deploy到两个不同的github帐号]]></title>
    <url>%2F2019%2F11%2F29%2F0007_1pc2github%2F</url>
    <content type="text"><![CDATA[如何用一台电脑部署两个不同的github帐号 一、 git配置 进入 .ssh 目录：C:\Users\yourusername\ .ssh 右键 git bush here 新建密钥：新邮箱 1ssh-keygen -t rsa -C youremail 输入新密钥的名字回车、回车、回车：例如：newkey 1Enter file in which to save the key (/c/Users/you/.ssh/id_rsa):newkey 新建配置文件： 1touch config 用文本编辑器编辑文件 config：前缀随意（可以设置成你新github的用户名），记住就行；第二个配置，newkey是刚刚新建密钥的名字 12345678910# 第一个：Host github.comHostName github.comUser gitIdentityFile ~/.ssh/id_rsa# 第二个：Host 前缀.github.comHostName github.comUser gitIdentityFile ~/.ssh/newkey 添加新密钥：依次执行下列命令：-D是清除密钥，然后添加两密钥进去，默认的id_rsa是第一个帐号的密钥，newkey是刚才新建的密钥。 1234ssh-agent bashssh-add -Dssh-add id_rsassh-add newkey 二、 github配置： 打开文件夹，找到newkey.pub，复制内容 打开github &gt; Your repositories &gt; settings &gt; Deploy keys &gt; Add deploy key title随意，把密钥的粘贴进去 记得勾选：□ Allow write access 三、 配置第二个hexo的config文件：不知道前缀是什么的话，请看：一、6 这里要注意的是repo的格式，git@前缀.github.com:(注意冒号)github用户名/github用户名.github.io.git 1234deploy: type: git repository: git@前缀.github.com:github用户名/github用户名.github.io.git branch: master 四、 上传；若是不行，再操作一遍 进入新hexo根目录 右键 git bash here 执行下列代码：12hexo cleanheox g -d]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[InDesign从excel导入数据，一秒钟生成多张名片（一万张名牌都可以），超省时间！]]></title>
    <url>%2F2019%2F11%2F14%2F0006_idnamecard%2F</url>
    <content type="text"><![CDATA[InDesign一秒钟生成多张名片（一万张名牌都可以），超省时间！ 一、 新建Excel表格，输入数据： 二、 另存为Unicode编码的txt文档，名字随意： 三、 新建 InDesign A4文档（便于把结果打印出来）四、 设计名片底板（大小按ISO-7810-D1标准：85.6mm X 53.98mm），假设我设计的底板是这样的： 五、 底板上面新建文本框，一个或多个（我拿一个来示范）： 六、 依次点击：窗口 –&gt; 实用程序 –&gt; 数据合并，调出数据合并面板： 七、 依次点击：数据合并面板右上角的菜单 –&gt; 选择数据源： 八、 选择第二步保存好的Unicode编码的txt文档，调出数据列表，然后选中文本框进入输入状态，然后单击数据列表里的项目： 九、 对占位符（“《占位》”）进行排版： 十、 依次点击：数据合并面板右上角的菜单 –&gt; 创建合并文档： 十一、 在记录选项卡里需要设置两个选项：1. 多个记录，2. 勾选多个记录预览；当然如果有特殊需要，也可以点击上方的 “多个记录” 选项卡，设置详细的参数。]]></content>
      <categories>
        <category>应用软件</category>
        <category>Adobe</category>
      </categories>
      <tags>
        <tag>技术收藏</tag>
        <tag>InDesign</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网站收藏]]></title>
    <url>%2F2019%2F11%2F08%2F0005_websites%2F</url>
    <content type="text"><![CDATA[我认为值得收藏的网站 .btn { margin-left: 0.5em; } 在线脑图 资源下载 …… …… 凹脑图 GitMind ProcessOn zhimap MindMaster Adobe CC 官方安装包 ... ...]]></content>
      <categories>
        <category>网站</category>
      </categories>
      <tags>
        <tag>网站收藏</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP表单元素刷新后保留原来的值]]></title>
    <url>%2F2019%2F08%2F19%2F0004_php-input-keep%2F</url>
    <content type="text"><![CDATA[PHP 表单元素，刷新后保留原来的值 1. 输入框：1&lt;input type=&quot;text&quot; name=&quot;input&quot; value=&quot;&lt;?php if(isset($_POST[&apos;input&apos;]))&#123;echo $_POST[&apos;input&apos;];&#125; ?&gt;&quot; &gt; 2. 复选框：1&lt;input type=&quot;checkbox&quot; name=&quot;box1&quot; &lt;?php if(isset($_POST[&apos;box1&apos;])) echo &quot;checked&quot;; ?&gt;&gt;]]></content>
      <categories>
        <category>网站技术</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php调用百度语音API实例]]></title>
    <url>%2F2019%2F08%2F06%2F0021_phpbaiduapi%2F</url>
    <content type="text"><![CDATA[php调用百度语音API实例 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;?php require_once &apos;AipSpeech.php&apos;; // 你的 APPID AK SK// 你的 APPID AK SKconst APP_ID = &apos;19425765&apos;;const API_KEY = &apos;hi4cN5q8XQnBCbBVQ3KmFxW8&apos;;const SECRET_KEY = &apos;Vj9Xj8oG3GZyD7faS30wVHSNqhjppr6b&apos;; $client = new AipSpeech(APP_ID, API_KEY, SECRET_KEY);// 识别本地文件$li = $client-&gt;asr(file_get_contents(&apos;./test.wav&apos;), &apos;wav&apos;, 16000, array( &apos;lan&apos; =&gt; &apos;zh&apos;,)); interface Msg&#123; function getMsg();&#125; class Result implements Msg&#123; protected $res = null; protected function __construct($re)&#123; $this-&gt;res = $re; &#125; public function getMsg()&#123;&#125;&#125;class Success extends Result&#123; public function __construct($re)&#123; parent::__construct($re); &#125; public function getMsg()&#123; if ($this-&gt;res[&apos;err_msg&apos;] == &apos;success.&apos;) &#123; // var_dump($this-&gt;res);exit; echo $this-&gt;res[&apos;result&apos;][0]; &#125; &#125;&#125; $tmp = new Success($li);$tmp-&gt;getMsg(); ?&gt;]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + Github 博客搭建-2019年最新详细教程（环境搭建篇）]]></title>
    <url>%2F2019%2F08%2F03%2F0003_hexo_github%2F</url>
    <content type="text"><![CDATA[前言：虽然有许多优秀的博客网站，只需注册，就可以免费使用其基础功能。这种博客无需自己维护，省心省事。但各种的的广告，繁杂的界面，都会影响写作心情。自己建博客网站，前期的设计，后期的维护，一大堆的事情，心会累，影响写作心情。总结来说就是，自己搭建博客网站费心、费心、费钱。不就是简简单单清清爽爽写点东西，怎么就这么如此困难呢。经过一段时间的摸索，我终于发现了一个完美的解决方案：Hexo博客框架，生成静态网站后，利用 Git Deploy 到 GitHub Pages 免费托管，又美观又免费，功能齐全，关键是干净纯粹又简洁，终于可以清清爽爽的写点东西啦。 【码字不易，尊重版权，转载请注明出处】 一、 安装Hexo：1. 提前安装（一）：Node.js： Hexo依赖于Node.js，我们也是通过npm（Node包管理器）进行安装的，要想安装Hexo必须先安装Node.js 下载地址：https://nodejs.org 然后点击：Windows Installer (.msi) 后面的 X64（我的系统是win10 64位的），等待下载完成。 下载好后，安装，全部过程只按下一步，安装完成。 验证是否工作：Win + R，输入cmd，回车打开命令提示符窗口，然后输入： 12node -vnpm -v 命令返回版本号，就证明安装成功了。例如： 12C:\Users\Username&gt;node -vv10.16.0 2. 提前安装（二）：git： 开始安装之前，还需要先安装git（安装过程中需要下载git包资源，必须先安装git），官网：https://git-scm.com/downloads 找到安装包下载。 下一步……下一步……完成 3. 四步安装： 官方文档：https://hexo.io/zh-cn/ 我总结的安装步骤：(共四步) 1234$ npm install hexo-cli -g$ hexo init // 先进入blog文件夹（cd blog）$ npm install$ hexo server Win + R，输入cmd，回车打开命令提示符窗口，然后输入 (不用管它会安装到哪里，系统会自动安装到npm所指定文件夹)。： 1npm install hexo-cli -g 初始化博客站点： 我们所要做的就是在电脑里给自己的博客找一个窝，一般会放在D盘根目录（路径最好不要出现中文），这样即使系统C盘挂了，你的博客数据仍然可以健在，数据无价啊！我们暂且在D盘根目录新建一个文件夹：D：\blog 然后，打开D盘blog文件夹，鼠标右键（注意要在blog文件夹里点击右键），Git Bash Here，然后输入命令： 1$ hexo init 若提示：hexo不是内部命令。请为Node.js添加全局环境变量：我的电脑=&gt;属性=&gt;高级系统设置=&gt;环境变量=&gt;系统变量=&gt;Path=&gt;新建=&gt;C:\Program Files\nodejs\node_global（如果你安装在了其他地方，请自行更改此处地址）。然后在用户变量部分，新建=&gt;变量名=&gt;NODE_PATH / 变量值=&gt;C:\Program Files\nodejs\node_global（如果你安装在了其他地方，请自行更改此处地址）。 初始化进程结束后，直接输入代码，自动安装依赖包到blog文件夹： 1$ nmp install 安装好后，检查是否成功：输入代码：(启动服务器) 1$ hexo s 验证是否安装好：打开电脑浏览器输入网址：(如果你看到 Hellow World 页面，你就成功了！) 1127.0.0.1:4000 二、 配置Github： 没有账号的到官网注册即可。 有账号后，登录账号，新建仓库，这里需要注意的是，仓库的名字的格式是“你的用户名.github.io”,每个用户只能建立一个这样主页，建好后，主页会自动开启，网址就是“http://你的用户名.github.io”： 配置好了吗？就这么简单！ 三、 链接 Github 和 本机blog文件夹里的 Hexo： 我们绝不可能，每次编辑好文件后，一个一个手动上传到 Github，所以我们会用 hexo 的上传工具自动的把所有要上传的东西上传到 Github 1. Git 操作： 生成密钥：(第三步直接按回车，直到密钥成成)123$ git config --global user.name &quot;你的GitHub用户名&quot;$ git config --global user.email &quot;你的GitHub注册邮箱&quot;$ ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot; 2. Github 操作： 根据提示的路径找到：id_rsa.pub 文件，记事本打开，全选复制。打开github网站，看图：右上角： 3. Hexo 操作： 在blog文件夹找到：config.yml，打开修改Hexo配置。更改下列字段：看图： 四、 上传本地网站到Github: 安装hexo上传插件，blog文件夹，git bash, 输入代码： 1$ npm install hexo-deployer-git --save 输入代码上传到Github: 123$ hexo clean 清除静态网站$ hexo g 生成静态网站$ hexo d 上传到Github 输入github用户名，密码（仅第一次上传）。 等待几分钟后，打开：http://你的用户名.github.io 验证。]]></content>
      <categories>
        <category>未分类</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Win10 Shift + 鼠标右键，在此处打开Powershell 和 CMD命令的显示与隐藏]]></title>
    <url>%2F2019%2F08%2F03%2F0002_win10_powershell_to_cmd%2F</url>
    <content type="text"><![CDATA[Windows系统技巧收藏 Win + R，输入：regedit，回车打开注册表编辑器。 计算机\HKEY_CLASSES_ROOT\Directory\Background\shell\cmd，找到里面有一个文件：HideBasedOnVelocityId 鼠标右键重命名为：ShowBasedOnVelocityId，但你发现你没有权限，无法命名。 选择cmd文件夹，鼠标右键： 点击 高级 按钮： 更改所有者： 点击高级： 点击立即查找： 在查找列表里选择：Administrators，一路确定，回到第一步。 返回第一步，选中Administrators，然后更改权限为，完全控制： 最后，更改文件名：HideBasedOnVelocityId 为 ShowBasedOnVelocityId]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>Win10</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo Markdown 基本语法]]></title>
    <url>%2F2018%2F11%2F23%2F0001_write_markdown%2F</url>
    <content type="text"><![CDATA[Markdown基本知识 壹 Markdown 基本语法之文字篇一 段落一行文字就是一个段落，不需要额外的代码。另起一段直接按回车另起一段。 二 粗体、斜体、删除线12345*这是斜体*_这也是斜体_**这是粗体*****这是粗体+斜体***~~这是删除线~~ 显示效果：这是斜体这也是斜体这是粗体这是粗体+斜体这是删除线 三 标题123456# 这是 H1 ## 这是 H2 ### 这是 H3 #### 这是 H4##### 这是 H5###### 这是 H6 四 引用1234567方法一：&gt; 引用内容1 中间空一行&gt; 引用内容2&gt; ......方法二： 显示效果： 引用内容1 引用内容2…… 五 列表项目列表：1234567891011* Fuchsia* Green* Blue+ Fuchsia+ Green+ Blue- Fuchsia- Green- Blue 显示效果：“*”、“+”、“-”三种标法都是一样的 Fuchsia Green Blue Fuchsia Green Blue Fuchsia Green Blue 有序列表：1234561. Fuchsia2. Green3. Blue1. Fuchsia1. Green1. Blue 显示效果：自动排序，行间距比较大 Fuchsia Green Blue Fuchsia Green Blue 六 代码引用1`两个反单引号之间的内容，会当做代码处理` 显示效果：这种是在句子中间引用代码：两个反单引号之间的内容，会当做代码处理 ，很多时候会用到。 七 代码块 上下各三个反单引号，中间不论有几行，这部分加起来就是代码块： 反单引号： ` 显示效果：123456上下各三个反单引号，中间不论有几行，这部分加起来就是代码块。第二行第三行第四行第五行...... 八 分割线123456在没有其他内容的空行，下列符号都可以用作分割线：* * *********- - ---------------------------------------- 显示效果：是一模一样的 九 转义12345678910111213markdown支持在以下字符前面插入反斜杠: 插入之后，将不再解析这些字符，而是原样输出。\ 反斜线` 反引号* 星号_ 底线&#123;&#125; 花括号[] 方括号() 括弧# 井字号+ 加号- 减号. 英文句点! 惊叹号 十 表格1234567891011| Item | Value | Qty || :------- | ----: | :---: || Computer | $1600 | 5 || Phone | $12 | 12 || Pipe | $1 | 234 |左边冒号，左对齐右边冒号，右对齐两边冒号，居中对齐一条虚线，加粗线条，项目线条 显示效果： Item Value Qty Computer $1600 5 Phone $12 12 Pipe $1 234 十一 注释123456789语法结构：&#123;% note class_name %&#125; 注释内容 &#123;% endnote %&#125;其中，class_name 可以是以下列表中的一个值：defaultprimarysuccessinfowarningdanger 显示效果： default primary success info warning danger 贰 Markdown 基本语法之多媒体篇一 超链接1234一个例子：尖括号里的链接自动生产超链接[百度](http://baidu.com/)[百度](http://baidu.com/ &quot;鼠标悬停显示：打开百度&quot;)&lt;http://baidu.com/&gt; 显示效果：百度百度http://baidu.com/ 二 图片12![图片占位名称](/pic/hd.jpg)![图片占位名称](/pic/xm.png &quot;图片下方及鼠标悬停显示：大熊猫&quot;) 显示效果： 三 视频1234直接调用HTML的代码即可：一个Youtube的实例。&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/PV7jN218VC0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt; 显示效果： 参考：wizardforcel 的 Markdown 简单的世界]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
  </entry>
</search>
